group "org.polypheny"


dependencies {
    implementation project(":core")
    implementation project(":sql-language")

    implementation group: "com.datastax.oss", name: "java-driver-core", version: cassandra_driver_core_version  // Apache 2.0
    implementation group: "com.datastax.oss", name: "java-driver-query-builder", version: cassandra_driver_query_builder_version  // Apache 2.0
    implementation group: "com.datastax.oss", name: "java-driver-mapper-runtime", version: cassandra_driver_query_builder_version  // Apache 2.0

    // Embedded Cassandra
    implementation group: 'com.github.nosan', name: 'embedded-cassandra', version: cassandra_embedded_version  // Apache 2.0


    // --- Test Compile ---
    testImplementation project(path: ":core", configuration: "tests")

    testImplementation group: "junit", name: "junit", version: junit_version

    testImplementation(group: "org.apache.cassandra", name: "cassandra-all", version: cassandra_all_version) { exclude(module: "log4j-over-slf4j") }  // Apache 2.0
}


sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
            outputDir = file(project.buildDir.absolutePath + "/classes")
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            outputDir = file(project.buildDir.absolutePath + "/test-classes")
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}

compileJava {
    dependsOn(":core:processResources")
    dependsOn(":sql-language:processResources")
}

delombok {
    dependsOn(":sql-language:processResources")
}

/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": "$project.version"
    }
}
java {
    withJavadocJar()
    withSourcesJar()
}
