group "org.polypheny"


configurations {
    tests {
        extendsFrom testRuntimeOnly
    }
}

dependencies {
    compileOnly project(":core")
    compileOnly project(":monitoring")

    implementation(group: "io.javalin", name: "javalin", version: javalin_version) {  // Apache 2.0
        exclude group: "org.slf4j"
        exclude(module: "jetty-server")
    }

    implementation group: "org.apache.commons", name: "commons-lang3", version: commons_lang3_version // Apache 2.0
    implementation group: "commons-io", name: "commons-io", version: commons_io_version  // Apache 2.0
    implementation group: "commons-codec", name: "commons-codec", version: commons_codec_version // Apache 2.0
    implementation group: "com.j256.simplemagic", name: "simplemagic", version: simplemagic_version // ISC

    // --- Test Compile ---
    testImplementation project(path: ":core", configuration: "tests")
    testImplementation project(path: ":core")
    testImplementation project(path: ":dbms")
    testImplementation project(path: ":dbms", configuration: "test")
    testImplementation project(path: ":plugins:sql-language")
    testImplementation project(path: ":plugins:sql-language", configuration: "tests")

    testCompileOnly group: "org.pf4j", name: "pf4j", version: pf4j_version

    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter', version: junit_jupiter_version

    testImplementation group: "org.mockito", name: "mockito-core", version: mockito_core_version
}


sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            destinationDirectory.set(file(project.buildDir.absolutePath + "/test-classes"))
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}

compileJava {
    dependsOn(":config:processResources")
    dependsOn(":core:processResources")
    dependsOn(":information:processResources")
    dependsOn(":monitoring:processResources")
}

delombok {
    dependsOn(":monitoring:processResources")
}

test.dependsOn(":dbms:shadowJar")


task testJar(type: Jar, dependsOn: testClasses) {
    archiveClassifier = 'tests'
    from sourceSets.test.output
}

artifacts {
    tests testJar // jar file containing the test classes
}


// due to gradle 7.6+
configurations {
    testClasses {
        extendsFrom(testImplementation)
    }
}
artifacts {
    // due to gradle 7.6+
    testClasses testJar
}

/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": "$project.version"
    }
}
java {
    withJavadocJar()
    withSourcesJar()
}

licensee {
    allow('Apache-2.0')

    allowDependency('javax.servlet', 'javax.servlet-api', '3.1.0') {
        because 'Servlet-api.jar and javax.servlet-*.jar are under the CDDL license, the original source code for this can be found at http://www.eclipse.org/jetty/downloads.php'
    }
    allowDependency('com.j256.simplemagic', 'simplemagic', '1.17') { because 'ISC license' }
}
