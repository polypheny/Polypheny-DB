group "org.polypheny"

apply plugin: "kotlin"

dependencies {
    compileOnly project(":core")
    compileOnly project(":plugins:sql-language")

    implementation group: "io.grpc", name: "grpc-all", version: cottontaildb_grpc_version
    // Cottontail DB
    implementation group: "org.vitrivr", name: "cottontaildb", version: cottontaildb_version
    implementation group: "org.vitrivr", name: "cottontaildb-proto", version: cottontaildb_driver_version


    implementation group: "org.slf4j", name: "log4j-over-slf4j", version: slf4j_api_version

    // --- Test Compile ---
    testImplementation project(path: ":dbms", configuration: "testClasses")

    testImplementation group: "junit", name: "junit", version: junit_version

}

compileKotlin {
    dependsOn(":plugins:sql-language:processResources")
}

compileJava {
    dependsOn(processResources)
    dependsOn(":plugins:sql-language:processResources")
}

delombok {
    dependsOn(":plugins:sql-language:processResources")
}

inspectClassesForKotlinIC {
    dependsOn(":plugins:cottontail-adapter:compileTestKotlin")
}

plugin {
    dependsOn(":plugins:cottontail-adapter:compileTestKotlin")
}


sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
            outputDir = file(project.buildDir.absolutePath + "/classes")
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            outputDir = file(project.buildDir.absolutePath + "/test-classes")
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}


/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": "$project.version"
    }
    dependsOn(":plugins:cottontail-adapter:compileTestKotlin")

}
java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    dependsOn(":plugins:cottontail-adapter:compileTestKotlin")
}
