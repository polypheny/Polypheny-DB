group "org.polypheny"


dependencies {
    compileOnly project(":core")
    compileOnly project(":plugins:sql-language")

    implementation group: "com.datastax.oss", name: "java-driver-core", version: cassandra_driver_core_version // Apache 2.0
    implementation group: "com.datastax.oss", name: "java-driver-query-builder", version: cassandra_driver_query_builder_version // Apache 2.0
    implementation group: "com.datastax.oss", name: "java-driver-mapper-runtime", version: cassandra_driver_query_builder_version // Apache 2.0

    // Embedded Cassandra
    implementation group: 'com.github.nosan', name: 'embedded-cassandra', version: cassandra_embedded_version  // Apache 2.0


    // --- Test Compile ---
    testImplementation project(path: ':dbms', configuration: 'test')
    testImplementation project(path: ':core', configuration: 'tests')
    testImplementation project(path: ':core')

    testImplementation group: "junit", name: "junit", version: junit_version

}


sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
            outputDir = file(project.buildDir.absolutePath + "/classes")
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            outputDir = file(project.buildDir.absolutePath + "/test-classes")
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}

compileJava {
    dependsOn(":core:processResources")
    dependsOn(":plugins:sql-language:processResources")
}

delombok {
    dependsOn(":plugins:sql-language:processResources")
}

/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": "$project.version"
    }
}
java {
    withJavadocJar()
    withSourcesJar()
}

licensee {
    allowUrl('http://www.opensource.org/licenses/Apache-2.0') // Apache 2.0
    allowUrl('http://www.jcabi.com/LICENSE.txt') // Own licensee but conforms

    allowDependency('org.ow2.asm', 'asm-util', '7.1') { because 'removed on release branches' }
    allowDependency('com.github.spotbugs', 'spotbugs-annotations', '3.1.12') { because 'removed on release branches' }

    allowDependency('org.ow2.asm', 'asm', '7.1') { because 'BSD 3-Clause' }
    allowDependency('org.ow2.asm', 'asm-analysis', '7.1') { because 'BSD 3-Clause' }
    allowDependency('org.ow2.asm', 'asm-commons', '7.1') { because 'BSD 3-Clause' }
    allowDependency('org.ow2.asm', 'asm-tree', '7.1') { because 'BSD 3-Clause' }
    allowDependency('com.github.jnr', 'jnr-posix', '3.0.50') { because 'removed on release branches' }

    allow('Apache-2.0')
    allow('MIT')
    allow('BSD-2-Clause')
    allow('CC0-1.0')
    allow('JSON') // extremely free

}


