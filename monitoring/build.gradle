group "org.polypheny"


apply plugin: "java-library"
apply plugin: "idea"
apply plugin: "io.freefair.lombok"


dependencies {
    implementation project(":core")

    implementation group: "org.mapdb", name: "mapdb", version: mapdb_version  // Apache 2.0

    //  Logging
    api group: "org.slf4j", name: "slf4j-api", version: slf4j_api_version  // MIT
    implementation group: "org.apache.logging.log4j", name: "log4j-core", version: log4j_core_version  // Apache 2.0
    implementation group: "org.apache.logging.log4j", name: "log4j-api", version: log4j_api_version  // Apache 2.0
    implementation group: "org.apache.logging.log4j", name: "log4j-slf4j2-impl", version: log4j_slf4j_impl_version  // Apache 2.0

    // --- Test Compile ---
    testImplementation project(path: ":core", configuration: "tests")
    implementation 'org.junit.jupiter:junit-jupiter:5.7.0'// Apache 2.0

    testImplementation group: "junit", name: "junit", version: junit_version
    testImplementation group: "org.mockito", name: "mockito-core", version: mockito_core_version  // MIT
}

sourceSets {
    main {
        java {
            srcDirs = ["src/main/java"]
            outputDir = file(project.buildDir.absolutePath + "/classes")
        }
        resources {
            srcDirs = ["src/main/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/classes")
    }
    test {
        java {
            srcDirs = ["src/test/java"]
            outputDir = file(project.buildDir.absolutePath + "/test-classes")
        }
        resources {
            srcDirs = ["src/test/resources"]
        }
        output.resourcesDir = file(project.buildDir.absolutePath + "/test-classes")
    }
}

compileJava {
    dependsOn(":core:processResources")
}

delombok {
    dependsOn(":core:processResources")
}


/**
 * JARs
 */
jar {
    manifest {
        attributes "Manifest-Version": "1.0"
        attributes "Copyright": "The Polypheny Project (polypheny.org)"
        attributes "Version": "$project.version"
    }
}
java {
    withJavadocJar()
    withSourcesJar()
}


